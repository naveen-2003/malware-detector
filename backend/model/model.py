
import joblib
import warnings
import json 
def predict_malware(dlls_features,api_features,pe_header_values,section_values):
    warnings.filterwarnings('ignore')
    file_path="/home/kali/mini-proj/backend/model/API_MODEL.joblib"
    with open(file_path,'rb') as file:
        model1=joblib.load(file)
    file_path="/home/kali/mini-proj/backend/model/DDL_MODEL.joblib"
    with open(file_path,'rb') as file:
        model2=joblib.load(file)
    file_path="/home/kali/mini-proj/backend/model/PEH_MODEL.joblib"
    with open(file_path,'rb') as file:
        model3=joblib.load(file)
    file_path="/home/kali/mini-proj/backend/model/PES_MODEL.joblib"
    with open(file_path,'rb') as file:
        model4=joblib.load(file)
    
    new_data1=[api_features]
    pred1 = model1.predict(new_data1)
    new_data2=[dlls_features]
    pred2 = model2.predict(new_data2)
    new_data3=[pe_header_values]
    pred3 = model3.predict(new_data3)
    new_data4=[section_values]
    pred4 = model4.predict(new_data4)
    # api_features=set(api_features)
    # dlls_features=set(dlls_features)
    # pe_header_values=set(pe_header_values)
    # section_values=set(section_values)
    # print(len(dlls_features),len(api_features),len(pe_header_values),len(section_values))
    # print(pe_header_values,section_values)
    # # return pred1[0],pred2[0],pred3[0],pred4[0]
    print(f"{pred1[0]},{pred2[0]},{pred3[0]},{pred4[0]}")

    
